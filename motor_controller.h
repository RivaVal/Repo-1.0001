

//=============================================================================
//==============    ( motor_controller.h )  ===================================
//=============================================================================




//=============================================================================
//=============================================================================
//=============================================================================
//  –ü–†–ò–í–ï–¢!! –û–∫—Ä—É–∂–µ–Ω–∏–µ: Arduino IDE, –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä esp32, –º–æ—Ç–æ—Ä—ã –±–µ–∑ –¥—Ä–∞–π–≤–µ—Ä–æ–≤, 
//  —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –æ—Ç ESP32 , –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–≤–∞ –ø–∏–Ω–∞ –¥–ª—è –¥–≤—É—Ö –º–æ—Ç–æ—Ä–æ–≤: GPIO25 –¥–ª—è 
//  –º–æ—Ç–æ—Ä–∞_–ê –∏ GPIO26 –¥–ª—è –º–æ—Ç–æ—Ä–∞_–ë ,–º–æ—Ç–æ—Ä—ã –ø–∏—Ç–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ç–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ BLHeli 
//  EMAX ESC –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∏—Ç–∞–Ω–∏—è: 21V, 6500 mAh    –ü—Ä–æ—à—É  –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ 
//  –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ github, –ø—Ä–æ—à—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–æ–∂–¥—É–ª–µ–π, –¥–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –ú–û–î–£–õ–Ø 
//  —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤—É–º—è –º–æ—Ç–æ—Ä–∞–º–∏ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º–æ—Ç–æ—Ä–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É: QX Motor QF(2827) 2227-1800KV 
//  –±–µ–∑ –¥—Ä–∞–π–≤–µ—Ä–∞, –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ mcpwm, –ù–£–ñ–ï–ù –≤–∞—Ä–∏–∞–Ω—Ç –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π 
//  –º–æ–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–Ω—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞! –ü—Ä–æ—à—É –¥–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –∫–æ–¥–∞ —Å –ø–æ–ª–Ω–æ–π 
//  –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º, –∞ —Ç–∞–∫ –∂–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ 
//  –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π:
//  1.–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–º –ø—Ä–æ–≥–æ–Ω–µ:
//  2. –ü–ª–∞–≤–Ω—ã–π —Å—Ç–∞—Ä—Ç –º–æ—Ç–æ—Ä–æ–≤ –¥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
//  3. –†–∞–±–æ—Ç–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º —É—Ä–æ–≤–Ω–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 4 –º–∏–Ω—É—Ç
//  4. –ü–ª–∞–≤–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ—Ç–æ—Ä–æ–≤ !
//  
//  –ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø—Ä–æ–µ–∫—Ç. –í–æ—Ç –º–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ—Ç–æ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ 
//  ESC —Å —Ç–µ—Å—Ç–æ–≤—ã–º –ø—Ä–æ–≥–æ–Ω–æ–º:
//  –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ—Ç–æ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ ESC (motor_controller.h)
//  
//=============================================================================
//=============================================================================
//=============================================================================
//  / * *
//   * –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤—É–º—è –º–æ—Ç–æ—Ä–∞–º–∏ QX Motor QF(2827) 2227-1800KV
//   * —á–µ—Ä–µ–∑ ESC —Ä–µ–≥—É–ª—è—Ç–æ—Ä—ã BLHeli EMAX —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ MCPWM Prelude API.
//   * –¢–æ–ª—å–∫–æ –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É.
//   * –í–µ—Ä—Å–∏—è: 2.0.0 (—Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º MCPWM Prelude)
//   * 
//   * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: 
//   * - GPIO25 -> ESC –º–æ—Ç–æ—Ä–∞ A
//   * - GPIO26 -> ESC –º–æ—Ç–æ—Ä–∞ B  
//   * –ü–∏—Ç–∞–Ω–∏–µ: 21V, 6500mAh
//  
//   * /
//   *   ( motor_controller.h )
//   *
//   *
//   * –¢–æ–ª—å–∫–æ –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É.
//   * –í–µ—Ä—Å–∏—è: 2.0.1 (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
//   * /
//==============================================================
//	üìÑ motor_controller.h (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)
//==============================================================
//  üìÑ motor_controller.h (–µ–¥–∏–Ω—ã–π —Ñ–∞–π–ª)
//==============================================================
//üìÑ motor_controller.h (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
//==============================================================  

#ifndef MOTOR_CONTROLLER_H
#define MOTOR_CONTROLLER_H

#include <Arduino.h>
#include <driver/mcpwm_prelude.h>

class MotorController {
private:
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∏–Ω–æ–≤ ESC
    static const uint8_t ESC_A_PIN = 25;
    static const uint8_t ESC_B_PIN = 26;
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ESC
    static const int ESC_MIN_US = 1000;
    static const int ESC_MAX_US = 2000;
    static const int PWM_FREQUENCY = 50;
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞
    static const int TEST_SPEED_PERCENT = 70;
    static const int TEST_DURATION_SEC = 240;
    
    // MCPWM –æ–±—ä–µ–∫—Ç—ã
    mcpwm_timer_handle_t timer_a = nullptr;
    mcpwm_timer_handle_t timer_b = nullptr;
    mcpwm_oper_handle_t oper_a = nullptr;
    mcpwm_oper_handle_t oper_b = nullptr;
    mcpwm_cmpr_handle_t comparator_a = nullptr;
    mcpwm_cmpr_handle_t comparator_b = nullptr;
    mcpwm_gen_handle_t generator_a = nullptr;
    mcpwm_gen_handle_t generator_b = nullptr;
    
    // –¢–µ–∫—É—â–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–æ—Ç–æ—Ä–æ–≤
    int current_speed_a;
    int current_speed_b;
    
    // –§–ª–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    bool is_test_running;
    unsigned long test_start_time;
    unsigned long last_report_time;
    
    // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    void init_mcpwm_components();
    void setup_generator_actions();
    void safe_delete(mcpwm_timer_handle_t& handle);
    void safe_delete(mcpwm_oper_handle_t& handle);
    void safe_delete(mcpwm_cmpr_handle_t& handle);
    void safe_delete(mcpwm_gen_handle_t& handle);
    
    int percent_to_us(int speed_percent) const;
    uint32_t us_to_ticks(int us) const;
    bool set_motor_speed(char motor_id, int speed_percent);
    void ramp_speed(int target_speed, float duration);

public:
    MotorController();
    ~MotorController();
    
    bool init_esc();
    bool set_motors_speed(int speed, float ramp_time = 0);
    void stop_motors(float ramp_time = 0);
    bool start_test_sequence();
    void stop_test_sequence();
    String get_motors_status() const;
    bool is_test_active() const;
    void update();
};

extern MotorController motor_controller;

#endif